name: Foodgram workflow

on: push

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line
          pip install -r food/requirements.txt

      - name: Test with flake8
        run: |
          python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend_foodgram:latest

      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./food
          file: ./food/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend_foodgram:latest

  deploy:
    name: Deploy image
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh command to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose down
            sudo docker image prune --force
            sudo docker container prune --force
            sudo docker system prune --force

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/frontend_foodgram:latest
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend_foodgram:latest

            sudo docker compose stop
            sudo docker compose rm backend
            sudo docker compose up -d

            sudo docker compose exec -T backend python manage.py makemigrations users
            sudo docker compose exec -T backend python manage.py makemigrations recipes
            sudo docker compose exec -T backend python manage.py migrate
            sudo docker compose exec -T backend python manage.py collectstatic --no-input
            sudo docker compose exec -T backend python manage.py load_to_db
            sudo docker compose exec -T backend python manage.py load_tags
            
  send_message_telegram:
    name: Send message to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой foodgram успешно выполнен!
